# Form implementation generated from reading ui file 'remotegui.ui'
#
# Created by: PyQt6 UI code generator 6.5.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(550, 720)
        MainWindow.setMinimumSize(QtCore.QSize(550, 720))
        MainWindow.setMaximumSize(QtCore.QSize(550, 720))
        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.mute_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.mute_button.setGeometry(QtCore.QRect(230, 290, 93, 28))
        self.mute_button.setObjectName("mute_button")
        self.power_button = QtWidgets.QPushButton(parent=self.centralwidget)
        self.power_button.setGeometry(QtCore.QRect(430, 30, 93, 28))
        self.power_button.setObjectName("power_button")
        self.channel_up = QtWidgets.QPushButton(parent=self.centralwidget)
        self.channel_up.setGeometry(QtCore.QRect(70, 330, 161, 91))
        self.channel_up.setObjectName("channel_up")
        self.volume_up = QtWidgets.QPushButton(parent=self.centralwidget)
        self.volume_up.setGeometry(QtCore.QRect(320, 330, 161, 91))
        self.volume_up.setObjectName("volume_up")
        self.volume_down = QtWidgets.QPushButton(parent=self.centralwidget)
        self.volume_down.setGeometry(QtCore.QRect(320, 450, 161, 91))
        self.volume_down.setObjectName("volume_down")
        self.channel_down = QtWidgets.QPushButton(parent=self.centralwidget)
        self.channel_down.setGeometry(QtCore.QRect(70, 450, 161, 91))
        self.channel_down.setObjectName("channel_down")
        self.graphicsView = QtWidgets.QGraphicsView(parent=self.centralwidget)
        self.graphicsView.setGeometry(QtCore.QRect(140, 50, 256, 192))
        self.graphicsView.setObjectName("graphicsView")
        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(150, 250, 55, 16))
        self.label.setObjectName("label")
        self.volume_bar = QtWidgets.QProgressBar(parent=self.centralwidget)
        self.volume_bar.setGeometry(QtCore.QRect(280, 250, 118, 23))
        self.volume_bar.setProperty("value", 0)
        self.volume_bar.setObjectName("volume_bar")
        self.lcdNumber = QtWidgets.QLCDNumber(parent=self.centralwidget)
        self.lcdNumber.setGeometry(QtCore.QRect(140, 50, 64, 23))
        self.lcdNumber.setObjectName("lcdNumber")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(parent=MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 550, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "HudaTalonRemote"))
        self.mute_button.setText(_translate("MainWindow", "Mute"))
        self.power_button.setText(_translate("MainWindow", "Power"))
        self.channel_up.setText(_translate("MainWindow", "Channel +"))
        self.volume_up.setText(_translate("MainWindow", "Volume +"))
        self.volume_down.setText(_translate("MainWindow", "Volume -"))
        self.channel_down.setText(_translate("MainWindow", "Channel -"))
        self.label.setText(_translate("MainWindow", "Channel"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
